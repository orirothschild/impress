/*
  A common approach is to use googleapis.com to generate css for the webfonts you want to use.
  The downside of this approach is that you have to be online. So below I have simply saved
  the output of the googleapis url into a file. Then you of course also have to make sure
  the webfonts are locally installed to make offline usage work. For Ubuntu (or Debian) I
  successfully used the script from here to do that: 
  http://www.webupd8.org/2011/01/automatically-install-all-google-web.html
*/

/* @import url(http://fonts.googleapis.com/css?family=Open+Sans:regular,semibold,italic,italicsemibold|PT+Sans:400,700,400italic,700italic|PT+Serif:400,700,400italic,700italic); */
@import url(fonts.css);



/*
    We display a fallback message for users with browsers that don't support
    all the features required by it. All of the content will be still fully 
    accessible for them, but some more advanced effects would be missing.
    When impress.js detects that browser supports all necessary CSS3 features, 
    the fallback-message style is hidden.
*/
.impress-enabled .hint { display: block }

/*
    ... and we will show it when the first step (with id 'bored') is active.
*/
.impress-on-bored .hint {
    /*
        We remove the transparency and position the hint in its default fixed
        position.
    */
    opacity: 1;

    -webkit-transform: translateY(0px);
    -moz-transform:    translateY(0px);
    -ms-transform:     translateY(0px);
    -o-transform:      translateY(0px);
    transform:         translateY(0px);

    /*
        Now for fade in transition we have the oposite situation from the one
        above.

        First after 4.5s delay we animate the transform property to move the hint
        into its correct position and after that we fade it in with opacity
        transition.
    */
    -webkit-transition: opacity 1s 5s, -webkit-transform 0.5s 4.5s;
    -moz-transition:    opacity 1s 5s,    -moz-transform 0.5s 4.5s;
    -ms-transition:     opacity 1s 5s,     -ms-transform 0.5s 4.5s;
    -o-transition:      opacity 1s 5s,      -o-transform 0.5s 4.5s;
    transition:         opacity 1s 5s,         transform 0.5s 4.5s;
}

/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled                          { pointer-events: none }
.impress-enabled #impress                 { pointer-events: auto }
.impress-enabled #impress-toolbar         { pointer-events: auto }
.impress-enabled #impress-console-button  { pointer-events: auto }


#source q {
    font-size: 60px;
}

#demos {
    -webkit-box-shadow: 100px 15px 15px 10px #000000, inset 14px 14px 115px 110px #000000, 15px 114px 115px 116px rgba(0,0,0,0); 
box-shadow: 15px 15px 51px 10px #000000, inset 4px 4px 15px 0px #000000, 5px 14px 15px 16px rgba(0,0,0,0);
    margin-top: 160px;
    height:130px    
}
#big {
    width: 600px;
    text-align: center;
    font-size: 60px;
    line-height: 1;
}

#big b {
    display: block;
    font-size: 250px;
    line-height: 250px;
}

#big .thoughts {
    font-size: 90px;
    line-height: 150px;
}

.big {
    width: 600px;
    text-align: center;
    font-size: 60px;
    line-height: 1;
}

.big b {
    display: block;
    font-size: 250px;
    line-height: 250px;
}

.big .thoughts {
    font-size: 90px;
    line-height: 150px;
}

.quotation{
    font-size: 30px;
    //margin: 0 auto;
    quotes: "\201C""\201D""\2018""\2019";
    padding: 10px 20px;
    line-height: 1.4;
  }
  
  .quotation:before {
    content: open-quote;
    display: inline;
    height: 0;
    line-height: 0;
    left: -10px;
    position: relative;
    top: 30px;
    color: #ccc;
    font-size: 3em;
  }
  .quotation::after {
    content: close-quote;
    display: inline;
    height: 0;
    line-height: 0;
    left: 10px;
    position: relative;
    top: 35px;
    color: #ccc;
    font-size: 3em;
  }
  footer{
    margin:0;
    text-align: right;
    font-size: 1.5em;
    font-style: italic;
  }
.arrow {
    border: 3px solid #97d4e8;
    border-radius: 4px;
    background: #c8e7f1;
    color: #2d7187;
    margin: 0 auto 40px;
    padding: 20px;
    text-align: center;
    width: 200px;
  }
  .arrow-up {
    width: 0; 
    height: 0; 
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    
    border-bottom: 5px solid black;
  }
  
  .arrow-down {
    width: 0; 
    height: 0; 
    border-left: 20px solid transparent;
    border-right: 20px solid transparent;
    
    border-top: 20px solid #f00;
  }
  
  .arrow-right {
    width: 0; 
    height: 0; 
    border-top: 60px solid transparent;
    border-bottom: 60px solid transparent;
    
    border-left: 60px solid green;
  }
  
  .arrow-left {
    width: 0; 
    height: 0; 
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent; 
    
    border-right:10px solid blue; 
  }
  .box {
    width: 150px;
    height: 75px;
    background-color: black;
    color: #fff;
    padding: 20px;
    position: relative;
    margin: 40px;
    float: left;
  }
  
  .box.arrow-top {
    margin-top: 40px;
  }
  
  .box.arrow-top:after {
    content: " ";
    position: absolute;
    right: 30px;
    top: -15px;
    border-top: none;
    border-right: 15px solid transparent;
    border-left: 15px solid transparent;
    border-bottom: 15px solid black;
  }
  
  .box.arrow-right:after {
    content: " ";
    position: absolute;
    right: -15px;
    top: 15px;
    border-top: 15px solid transparent;
    border-right: none;
    border-left: 15px solid black;
    border-bottom: 15px solid transparent;
  }
  
  .box.arrow-bottom:after {
    content: " ";
    position: absolute;
    right: 30px;
    bottom: -15px;
    border-top: 15px solid black;
    border-right: 15px solid transparent;
    border-left: 15px solid transparent;
    border-bottom: none;
  }
  
  .box.arrow-left:after {
    content: " ";
    position: absolute;
    left: -15px;
    top: 15px;
    border-top: 15px solid transparent;
    border-right: 15px solid black;
    border-left: none;
    border-bottom: 15px solid transparent;
  }
  .arrow_box {
	position: relative;
	background: #88b7d5;
	border: 10px solid #c2e1f5;
}
.arrow_box:after, .arrow_box:before {
	top: 100%;
	left: 50%;
	border: solid transparent;
	content: " ";
	height: 0;
	width: 0;
	position: absolute;
	pointer-events: none;
}

.arrow_box:after {
	border-color: rgba(136, 183, 213, 0);
	border-top-color: #88b7d5;
	border-width: 100px;
	margin-left: -100px;
}
.arrow_box:before {
	border-color: rgba(194, 225, 245, 0);
	border-top-color: #c2e1f5;
	border-width: 114px;
	margin-left: -114px;
}

.arrow_up {
	position: relative;
	background: #88b7d5;
	border: 4px solid #c2e1f5;
}
.arrow_up:after, .arrow_up:before {
	bottom: 100%;
	left: 20%;
	border: solid transparent;
	content: " ";
	height: 0;
	width: 0;
	position: absolute;
	pointer-events: none;
}

.arrow_up:after {
	border-color: rgba(136, 183, 213, 0);
	border-bottom-color: #88b7d5;
	border-width: 60px;
	margin-left: -60px;
}
.arrow_up:before {
	border-color: rgba(194, 225, 245, 0);
	border-bottom-color: #c2e1f5;
	border-width: 96px;
	margin-left: -96px;
}

.arrow_down {
	position: relative;
	background: #88b7d5;
    border: 4px solid #c2e1f5;
    margin-bottom: 400px;
}
.arrow_down:after, .arrow_down:before {
	top: 100%;
	left: 80%;
	border: solid transparent;
	content: " ";
	height: 0;
	width: 0;
	position: absolute;
	pointer-events: none;
}

.arrow_down:after {
	border-color: rgba(136, 183, 213, 0);
	border-top-color: #88b7d5;
	border-width: 60px;
	margin-left: -60px;
}
.arrow_down:before {
	border-color: rgba(194, 225, 245, 0);
	border-top-color: #c2e1f5;
	border-width: 96px;
	margin-left: -96px;
}

.up {
	position: relative;
	background: #88b7d5;
	border: 100px solid #c2e1f5;
}
.up:after, .arrow_box:before {
	bottom: 100%;
	left: 50%;
	border: solid transparent;
	content: " ";
	height: 0;
	width: 0;
	position: absolute;
	pointer-events: none;
}

.up:after {
	border-color: rgba(136, 183, 213, 0);
	border-bottom-color: #88b7d5;
	border-width: 100px;
	margin-left: -100px;
}
.up:before {
	border-color: rgba(194, 225, 245, 0);
	border-bottom-color: #c2e1f5;
	border-width: 114px;
	margin-left: -114px;
}
.fallback-message {
    font-family: sans-serif;
    line-height: 1.3;

    width: 780px;
    padding: 10px 10px 0;
    margin: 20px auto;

    border: 1px solid #E4C652;
    border-radius: 10px;
    background: #EEDC94;
}
#ing { width: 500px }

/*
    ... so we define display to `inline-block` to enable transforms and
    transition duration to 0.5s ...
*/
#ing b {
    display: inline-block;
    -webkit-transition: 0.5s;
    -moz-transition:    0.5s;
    -ms-transition:     0.5s;
    -o-transition:      0.5s;
    transition:         0.5s;
}

/*
    ... and we want 'positioning` word to move up a bit when the step gets
    `present` class ...
*/
#ing.present .positioning {
    -webkit-transform: translateY(-10px);
    -moz-transform:    translateY(-10px);
    -ms-transform:     translateY(-10px);
    -o-transform:      translateY(-10px);
    transform:         translateY(-10px);
}

/*
    ... 'rotating' to rotate a quarter of a second later ...
*/
#ing.present .rotating {
    -webkit-transform: rotate(-10deg);
    -moz-transform:    rotate(-10deg);
    -ms-transform:     rotate(-10deg);
    -o-transform:      rotate(-10deg);
    transform:         rotate(-10deg);

    -webkit-transition-delay: 0.25s;
    -moz-transition-delay:    0.25s;
    -ms-transition-delay:     0.25s;
    -o-transition-delay:      0.25s;
    transition-delay:         0.25s;
}

/*
    ... and 'scaling' to scale down after another quarter of a second.
*/
#ing.present .scaling {
    -webkit-transform: scale(0.7);
    -moz-transform:    scale(0.7);
    -ms-transform:     scale(0.7);
    -o-transform:      scale(0.7);
    transform:         scale(0.7);

    -webkit-transition-delay: 0.5s;
    -moz-transition-delay:    0.5s;
    -ms-transition-delay:     0.5s;
    -o-transition-delay:      0.5s;
    transition-delay:         0.5s;
}

/*
    The 'imagination' step is again some boring font-sizing.
*/

.fallback-message p {
    margin-bottom: 10px;
}

.impress-supported .fallback-message {
    display: none;
}


body {
    font-family: 'PT Sans', sans-serif;
    min-height: 740px;

    background-color: white;
}

/*
    Now let's style the presentation steps.
*/

.step {
    display: block;

    position: relative;
    width: 1200px;
    padding: 40px;
    margin: 20px auto;

    box-sizing:         border-box;

    text-shadow: 0 2px 2px rgba(0, 0, 0, .1);

    font-family: 'Open Sans', Arial, sans-serif;
    font-size: 26pt;
    letter-spacing: -1px;
}

/*
    Which steps are transparent and when.
*/

/* When on the overview slide, hide most slides.
   Also do it for title slide, to avoid them showing during animation away from overview. */
.impress-enabled.impress-on-overview .step,
.impress-enabled.impress-on-title .step {
    opacity: 0;
    transition:         opacity 1s;
}

/* When not on the overview slide, make it semi-transparent so that it blends with the background color.
   This makes the text more readable. */
.impress-enabled #overview {
    opacity: 0.4;
    transition:         opacity 1s;
}
.impress-enabled #overview.active {
    opacity: 1;
    transition:         opacity 1s;
}
/* Only show title slide and the copyright attributions. */
.impress-enabled #title,
.impress-enabled #copyright {
    opacity: 1;
}

/* Show the about-me slide only when actually on it. */
.impress-enabled #h_ingo {
    opacity: 0;
}
.impress-enabled #h_ingo.active {
    opacity: 1;
    transition:         opacity 1s;
}

/* When not on a slide, dim them just a little bit... */
.impress-enabled .step {
    opacity: 0.7;
    transition:         opacity 1s;
}

/* On the last slide, also dim title and copyright so they don't stand out in an ugly way */
.impress-enabled.impress-on-future #title,
.impress-enabled.impress-on-future #copyright {
    opacity: 0.4;
    transition:         opacity 1s;
}

.impress-enabled .step.active { opacity: 1 }

/*
    Speaker notes allow you to write comments within the steps, that will not 
    be displayed as part of the presentation. However, they will be picked up
    and displayed by impressConsole.js when integrated.
*/

.notes {
    display: none;
}


h1, 
h2, 
h3 {
    margin-bottom: 0.5em;
    margin-top: 0.5em;
    text-align: center;
}

h1 {
    font-size: 40px;
}

h2 {
    font-size: 34px;
}

h3 {
    font-size: 32px;
}

p {
    text-align: center;
    margin: 0.7em;
}

li {
    margin: 0.2em;
}

a {
    color: inherit;
    text-decoration: none;
    padding: 0 0.1em;
    background: rgba(200,200,200,0.2);
    text-shadow: -1px 1px 2px rgba(100,100,100,0.9);
    border-radius: 0.2em;
    border-bottom: 1px solid rgba(100,100,100,0.2);
    border-left:   1px solid rgba(100,100,100,0.2);

    transition:         0.5s;
}
a:hover,
a:focus {
    background: rgba(200,200,200,1);
    text-shadow: -1px 1px 2px rgba(100,100,100,0.5);
}

blockquote {
    font-family: 'PT Serif';
    font-style: italic;
    font-weight: 400;    
}

em {
    text-shadow: 0 2px 2px rgba(0, 0, 0, .3);    
}

strong {
    text-shadow: -1px 1px 2px rgba(100,100,100,0.5);
}

q {
    font-family: 'PT Serif';
    font-style: italic;
    font-weight: 400;    
    text-shadow: 0 2px 2px rgba(0, 0, 0, .3);
}

strike {
    opacity: 0.7;
}

small {
    font-size: 0.4em;
}

.slide .right {
    float: right;
    margin-left:   40px;
    margin-right:   0px;
    margin-top:    20px;
    margin-bottom: 20px;
}
.slide .left {
    float: left;
    margin-right:  40px;
    margin-left:    0px;
    margin-top:    20px;
    margin-bottom: 20px;
}
.slide .top {
    position: absolute;
    top: 20px;
    margin-bottom:  20px;
    margin-top:      0px;    
}
.slide .bottom {
    position: absolute;
    bottom: 20px;
    margin-bottom:   0px;
    margin-top:     20px;    
}

/* 
    Specific styles for: .title slides 
*/

.title {
    background-image: url(../images/background-title.png);    
    text-align: center;    
}

.title h1,
.title h2,
.title h3 {
    width: 90%;
    text-align: center;    
}
.title h1 { font-size: 50px; margin-bottom: 100px;}
.title h2 { font-size: 40px; }


/* Substeps */

.impress-enabled .substep {
    opacity: 0;
}

.impress-enabled .substep.substep-visible {
    opacity: 1;
    transition: 1s;
}

/* Styles for animating the contents of a slide, such as a img, p, li or span element. ********/

.right {
    float: right;
    margin-left:   40px;
    margin-right:   0px;
    margin-top:    20px;
    margin-bottom: 20px;
}
.left {
    float: left;
    margin-right:  40px;
    margin-left:    0px;
    margin-top:    20px;
    margin-bottom: 20px;
}
.top {
    position: absolute;
    top: 20px;
    margin-bottom:  20px;
    margin-top:      0px;    
}
.bottom {
    position: absolute;
    bottom: 20px;
    margin-bottom:   0px;
    margin-top:     20px;    
}

/*
 fly-in class starts from a position outside the slide, then flies into it's correct position.
*/
.future .fly-in {
    transform: translateY(-700px);
    opacity: 0.0; /* Make it invisible, just so it doesn't clutter some other slide that might be in the position where we moved it */
}
.present .fly-in {
    transform:         translateY(0px);
    opacity: 1.0;
    transition:         2s;
}
.past .fly-out {
    transform:         translateY(700px);
    opacity: 0.0;
    transition:         2s;
}

/*
   Fade-in/out is a straightforward fade. Give it enough seconds that all browsers render it clearly.
*/
.future .fade-in {
    opacity: 0.0;
}
.present .fade-in {
    opacity: 1.0;
    transition: 3s;
}
.past .fade-out {
    opacity: 0.0;
    transition: 3s;
}
/*
    Zoom-in.
*/
.future  .zoom-in {
    transform:        scale(10);
    opacity: 0.0;    
}
.present .zoom-in {
    transform:         scale(1);
    opacity: 1.0;
    transition: 3s;
}
.past  .zoom-out {
    transform:        scale(10);
    opacity: 0.0;    
}

/*
  This version of impress.js supports plugins, and in particular, a UI plugin
  that allows easy navigation between steps.
*/
.impress-enabled #impress-toolbar {
    position: fixed;
    right: 1px;
    bottom: 1px;
    opacity: 0.6;
}
/*
    With help from the mouse-timeout plugin, we can hide the toolbar and
    have it show only when you move/click/touch the mouse.
*/
body.impress-mouse-timeout div#impress-toolbar {
    display: none;
}

/*
    In fact, we can hide the mouse cursor itself too, when mouse isn't used.
*/
body.impress-mouse-timeout {
    cursor: none;
}

.impress-enabled                          { pointer-events: none }
.impress-enabled #impress                 { pointer-events: auto }
.impress-enabled #impress-toolbar         { pointer-events: auto }

.bodys {
    font-family: 'PT Sans', sans-serif;
    min-height:1000px;
    min-width: 1000px;
    align-content: inherit;
    background: rgb(255, 255, 255);
    background: -webkit-gradient(radial, 50% 50%, 0, 50% 50%, 500, from(rgb(255, 255, 255)), to(rgb(255, 255, 255)));
    background: -webkit-radial-gradient(rgb(255, 255, 255), rgb(215, 215, 215));
    background:    -moz-radial-gradient(rgb(255, 255, 255), rgb(255, 255, 255));
    background:     -ms-radial-gradient(rgb(255, 255, 255), rgb(255, 255, 255));
    background:      -o-radial-gradient(rgb(255, 255, 255), rgb(255, 255, 255));
    background:         radial-gradient(rgb(255, 255, 255), rgb(255, 255, 255));
}


/*****************************************************************************************
 * Help popup
 * 
 * This is originally from hovercraft.js project. I found it helpful so have started to
 * integrate with all my impress.js presentations.
 */

.impress-enabled #impress-help {
    background: none repeat scroll 0 0 rgba(0, 0, 0, 0.5);
    color: #EEEEEE;
    font-size: 80%;
    left: 2em;
    bottom: 2em;
    width: 24em;
    border-radius: 1em;
    padding: 1em;
    position: fixed;
    right: 0;
    text-align: center;
    z-index: 100;
    display: block;
    font-family: Verdana, Arial, Sans;
}

.impress-enabled #impress-help.hide {
    display: none;
}

/*
    The 'imagination' step is again some boring font-sizing.
*/